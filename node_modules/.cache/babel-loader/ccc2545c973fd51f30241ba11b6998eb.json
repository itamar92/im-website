{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error(\"could not fetch the data for that resource\");\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === \"AbortError\") {\n          console.log(\"fetch aborted\");\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n\n        setError(err.message);\n      });\n    }, 50);\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/itamar/Haker U Class/Mid Project React/Complete-React-Tutorial-lesson-5/dojo-blog/src/Components/usefetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACV,GAAD,EAAM;AAAEW,QAAAA,MAAM,EAAEJ,SAAS,CAACI;AAApB,OAAN,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,gBAAMC,KAAK,CAAC,4CAAD,CAAX;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OANH,EAOGJ,IAPH,CAOSX,IAAD,IAAU;AACdC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAXH,EAYGW,KAZH,CAYUC,GAAD,IAAS;AACd,YAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,SAFD,MAEO;AACLjB,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,UAAAA,QAAQ,CAACY,GAAG,CAACI,OAAL,CAAR;AACD;;AACDhB,QAAAA,QAAQ,CAACY,GAAG,CAACI,OAAL,CAAR;AACD,OApBH;AAqBD,KAtBS,EAsBP,EAtBO,CAAV;AAwBA,WAAO,MAAMf,SAAS,CAACgB,KAAV,EAAb;AACD,GA3BQ,EA2BN,CAACvB,GAAD,CA3BM,CAAT;AA6BA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CAnCD;;GAAMN,Q;;AAqCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n        .then((res) => {\n          if (!res.ok) {\n            throw Error(\"could not fetch the data for that resource\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted\");\n          } else {\n            setIsPending(false);\n            setError(err.message);\n          }\n          setError(err.message);\n        });\n    }, 50);\n\n    return () => abortCont.abort();\n  }, [url]);\n\n  return { data, isPending, error };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}