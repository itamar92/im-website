{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst useAxios = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    axios.get(url).then(res => {\n      if (!res.ok) {\n        throw Error(\"could not fetch the data for that resource\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(\"fetch aborted\");\n      } else {\n        setIsPending(false);\n        setError(err.message);\n      }\n\n      setError(err.message);\n    });\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useAxios, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/itamar/Haker U Class/Mid Project React/IM Production-website/im-website/src/Components/usefetch.js"],"names":["axios","useState","useEffect","useAxios","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","get","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AACAZ,IAAAA,KAAK,CACFa,GADH,CACOT,GADP,EAEGU,IAFH,CAESC,GAAD,IAAS;AACb,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAMC,KAAK,CAAC,4CAAD,CAAX;AACD;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KAPH,EAQGJ,IARH,CAQST,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAZH,EAaGS,KAbH,CAaUC,GAAD,IAAS;AACd,UAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,OAFD,MAEO;AACLf,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACU,GAAG,CAACI,OAAL,CAAR;AACD;;AACDd,MAAAA,QAAQ,CAACU,GAAG,CAACI,OAAL,CAAR;AACD,KArBH;AAuBA,WAAO,MAAMb,SAAS,CAACc,KAAV,EAAb;AACD,GA1BQ,EA0BN,CAACrB,GAAD,CA1BM,CAAT;AA4BA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CAlCD;;GAAMN,Q;;AAoCN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nconst useAxios = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n    axios\n      .get(url)\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"could not fetch the data for that resource\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      })\n      .catch((err) => {\n        if (err.name === \"AbortError\") {\n          console.log(\"fetch aborted\");\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n        setError(err.message);\n      });\n\n    return () => abortCont.abort();\n  }, [url]);\n\n  return { data, isPending, error };\n};\n\nexport default useAxios;\n"]},"metadata":{},"sourceType":"module"}